type Query {
  instance: Instance!

  viewer: Viewer!

  artists(name: String): [Artist!]!
  artist(slug: ID!): Artist!

  cities(name: String): [City!]!
  city(slug: ID!): City!

  validateArtist(forInsert: Boolean!, artist: IArtist!): ArtistValidation!
  validateCity(forInsert: Boolean!, city: ICity!): CityValidation!
  validateLocation(forInsert: Boolean!, citySlug: ID!, location: ILocation!): LocationValidation!
  validateEvent(forInsert: Boolean!, citySlug: ID!, event: IEvent!): EventValidation!
}

scalar Date
scalar DateTime

scalar URL

type Instance {
  name: String!
  warnings: [String!]!
}

type Viewer {
  authenticated: AuthenticatedUser
}

type AuthenticatedUser {
  name: String!
}

type Artist {
  slug: ID!
  name: String!
  description: [String!]!
  website: URL
  image: URL
}

type City {
  slug: ID!
  name: String!
  tags: [Tag!]!
  locations(name: String): [Location!]!
  location(slug: ID!): Location!
  event(id: ID!): Event!
  events(tag: ID, location: ID, artist: ID, title: String, dates: IDateInterval): [Event!]!
  firstDate: Date
  dateAfter: Date
  image: URL
  allTagsImage: URL
}

type Tag {
  slug: ID!
  title: String!
  image: URL
}

type Location {
  slug: ID!
  name: String!
  description: [String!]!
  website: URL
  image: URL
  phone: String
  address: [String!]!
}

type Event {
  id: ID!
  title: String
  artist: Artist
  location: Location!
  tags: [Tag!]!
  occurrences: [Occurrence!]!
  reservationPage: URL
}

type Occurrence {
  start: DateTime!
}

input IDateInterval {
  start: Date!
  after: Date!
}


type Mutation {
  putArtist(artist: IArtist!): Artist!
  putCity(city: ICity!): City!
  putLocation(citySlug: ID!, location: ILocation!): Location!
  putEvent(citySlug: ID!, event: IEvent!): Event!
  deleteEvent(citySlug: ID!, eventId: ID!): Event!
}

input IArtist {
  slug: ID!
  name: String!
  description: [String!]
  website: URL
  image: URL
}

type ArtistValidation {
  slug: String
  name: String
  description: String
  website: String
  image: String
}

input ICity {
  slug: ID!
  name: String!
  tags: [ITag!]
  image: URL
  allTagsImage: URL
}

input ITag {
  slug: ID!
  title: String!
  image: URL
}

type CityValidation {
  slug: String
  name: String
  tags: String
  image: String
  allTagsImage: String
}

input ILocation {
  slug: ID!
  name: String!
  description: [String!]
  website: URL
  image: URL
  phone: String
  address: [String!]
}

type LocationValidation {
  slug: String
  name: String
  description: String
  website: String
  image: String
  phone: String
  address: String
}

input IEvent {
  id: ID
  title: String
  artist: ID
  location: ID
  tags: [ID!]
  occurrences: [IOccurrence!]
  reservationPage: URL
}

input IOccurrence {
  start: DateTime!
}

type EventValidation {
  id: String
  title: String
  artist: String
  location: String
  tags: String
  occurrences: String
  reservationPage: String
}
